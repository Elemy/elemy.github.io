<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Elemy&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://elemy.github.io/"/>
  <updated>2018-04-26T01:56:16.627Z</updated>
  <id>https://elemy.github.io/</id>
  
  <author>
    <name>潘了了</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://elemy.github.io/2018/04/26/hello-world/"/>
    <id>https://elemy.github.io/2018/04/26/hello-world/</id>
    <published>2018-04-26T01:56:16.627Z</published>
    <updated>2018-04-26T01:56:16.627Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>对js单线程和异步的理解</title>
    <link href="https://elemy.github.io/2018/04/25/%E5%AF%B9js%E5%8D%95%E7%BA%BF%E7%A8%8B%E5%92%8C%E5%BC%82%E6%AD%A5%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>https://elemy.github.io/2018/04/25/对js单线程和异步的理解/</id>
    <published>2018-04-24T16:00:00.000Z</published>
    <updated>2018-04-26T02:09:15.061Z</updated>
    
    <content type="html"><![CDATA[<p>一直觉得js的单线程和异步是矛盾的，也没有花时间去了解其中的机制，直到最近部门前端组开会，涉及到这个问题，才私下学习其中的原理。</p><h2 id="浏览器线程"><a href="#浏览器线程" class="headerlink" title="浏览器线程"></a>浏览器线程</h2><p>浏览器有多个线程，包括javascript引擎、界面渲染线程、事件触发线程、http请求线程。</p><p><img src="https://github.com/Elemy/elemy.github.io/raw/master/images/brower-threads.png" alt="image"></p><h2 id="javascript线程"><a href="#javascript线程" class="headerlink" title="javascript线程"></a>javascript线程</h2><h4 id="1-事件循环"><a href="#1-事件循环" class="headerlink" title="1. 事件循环"></a>1. 事件循环</h4><p>JS 会创建一个类似于 while (true) 的循环，每执行一次循环体的过程称之为 Tick。每次 Tick 的过程就是查看是否有待处理事件，如果有则取出相关事件及回调函数放入执行栈中由主线程执行。待处理的事件会存储在一个任务队列中，也就是每次 Tick 会查看任务队列中是否有需要执行的任务。</p><h4 id="2-任务队列"><a href="#2-任务队列" class="headerlink" title="2. 任务队列"></a>2. 任务队列</h4><p>异步操作会将相关回调添加到任务队列中。而不同的异步操作添加到任务队列的时机也不同，如 onclick, setTimeout, ajax 处理的方式都不同，这些异步操作是由浏览器内核的 webcore 来执行的，webcore 包含上图中的3种 webAPI，分别是 DOM Binding、network、timer模块。</p><h4 id="3-主线程"><a href="#3-主线程" class="headerlink" title="3. 主线程"></a>3. 主线程</h4><p>JS 只有一个线程，称之为主线程。而事件循环是主线程中执行栈里的代码执行完毕之后，才开始执行的。所以，主线程中要执行的代码时间过长，会阻塞事件循环的执行，也就会阻塞异步操作的执行。只有当主线程中执行栈为空的时候（即同步代码执行完后），才会进行事件循环来观察要执行的事件回调，当事件循环检测到任务队列中有事件就取出相关回调放入执行栈中由主线程执行。</p><h4 id="4-js线程与GUI线程是互斥的。"><a href="#4-js线程与GUI线程是互斥的。" class="headerlink" title="4. js线程与GUI线程是互斥的。"></a>4. js线程与GUI线程是互斥的。</h4><p>当GUI在执行的时候，js线程会被阻塞；当js线程在执行任务的时候，GUI会被“冻结”。</p><h4 id="5-ajax异步。"><a href="#5-ajax异步。" class="headerlink" title="5. ajax异步。"></a>5. ajax异步。</h4><p>ajax的异步是由浏览器http请求线程实现的。浏览器监测到请求状态变更，会将先前已设置好的回调函数放到js单线程任务队列中等待处理。</p><blockquote><p><em>学习文章：<br><a href="https://blog.csdn.net/qdq2014/article/details/72383725" target="_blank" rel="noopener">https://blog.csdn.net/qdq2014/article/details/72383725</a></em></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一直觉得js的单线程和异步是矛盾的，也没有花时间去了解其中的机制，直到最近部门前端组开会，涉及到这个问题，才私下学习其中的原理。&lt;/p&gt;
&lt;h2 id=&quot;浏览器线程&quot;&gt;&lt;a href=&quot;#浏览器线程&quot; class=&quot;headerlink&quot; title=&quot;浏览器线程&quot;&gt;&lt;/a
      
    
    </summary>
    
      <category term="博客" scheme="https://elemy.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="js单线程" scheme="https://elemy.github.io/tags/js%E5%8D%95%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="js异步" scheme="https://elemy.github.io/tags/js%E5%BC%82%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>github博客绑定自己的域名</title>
    <link href="https://elemy.github.io/2018/04/01/github%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D/"/>
    <id>https://elemy.github.io/2018/04/01/github博客绑定自己的域名/</id>
    <published>2018-03-31T16:00:00.000Z</published>
    <updated>2018-04-26T02:08:18.660Z</updated>
    
    <content type="html"><![CDATA[<h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ol><li>用github搭建的博客，绑定自己的域名前，可以通过elemy.github.io访问自己的博客<br><a href="http://hifor.net/2015/07/01/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-hexo-github/" target="_blank" rel="noopener">参考文章：零基础免费搭建个人博客-hexo+github</a></li><li>准备域名（我的域名为panll.cc）</li></ol><h4 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h4><ol><li>在博客所在仓库添加一个文件名为CNAME的文件（<em>注意：大写</em>）<blockquote><p>在文件中写入域名，如“panll.cc”。</p></blockquote></li><li>解析域名</li></ol><blockquote><p>我买的是阿里云的域名，打开控制台找到自己的域名，点击“解析”，然后添加解析,DNS配置如下：</p></blockquote><table><thead><tr><th>记录类型</th><th>主机记录</th><th>解析线路</th><th>记录值</th><th>MX优先级</th><th>TTL值</th></tr></thead><tbody><tr><td>A</td><td>@</td><td>默认</td><td>192.30.252.154</td><td>–</td><td>600</td></tr><tr><td>A</td><td>@</td><td>默认</td><td>192.30.252.153</td><td>–</td><td>600</td></tr><tr><td>CNAME</td><td>www</td><td>默认</td><td>username.github.io</td><td>–</td><td>600</td></tr></tbody></table><p>用你自己的 Github 用户名替换表格中的 username</p><ol><li>10分钟后访问自己博客</li></ol><ul><li>通过访问username.github.io(elemy.github.io),可以自动跳转至自己的域名(panll.cc)</li><li>直接访问panll.cc</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;用github搭建的博客，绑定自己的域名前，可以通过elemy.github.io访问自己的博客&lt;br&gt;&lt;a h
      
    
    </summary>
    
      <category term="博客" scheme="https://elemy.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="github" scheme="https://elemy.github.io/tags/github/"/>
    
      <category term="域名绑定" scheme="https://elemy.github.io/tags/%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A/"/>
    
  </entry>
  
  <entry>
    <title>使用vue-element-admin实现后台管理</title>
    <link href="https://elemy.github.io/2018/03/30/%E4%BD%BF%E7%94%A8vue-element-admin%E5%AE%9E%E7%8E%B0%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86/"/>
    <id>https://elemy.github.io/2018/03/30/使用vue-element-admin实现后台管理/</id>
    <published>2018-03-29T16:00:00.000Z</published>
    <updated>2018-04-26T01:56:16.628Z</updated>
    
    <content type="html"><![CDATA[<p>刚入职，上级推荐使用vue-element-admin来实现一个后台管理。</p><h3 id="vue-element-admin简介"><a href="#vue-element-admin简介" class="headerlink" title="vue-element-admin简介"></a>vue-element-admin简介</h3><p>简单介绍一下，vue-element-admin一个后台集成解决方案，它基于 Vue.js 和 element，功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">- 登录/注销</span><br><span class="line">- 权限验证</span><br><span class="line">- 多环境发布</span><br><span class="line">- 动态侧边栏（支持多级路由）</span><br><span class="line">- 动态面包屑</span><br><span class="line">- 国际化多语言</span><br><span class="line">- 多种动态换肤</span><br><span class="line">- 快捷导航(标签页)</span><br><span class="line">- 富文本编辑器</span><br><span class="line">- Markdown编辑器</span><br><span class="line">- JSON编辑器</span><br><span class="line">- Screenfull全屏</span><br><span class="line">- 列表拖拽</span><br><span class="line">- Svg Sprite 图标</span><br><span class="line">- Dashboard</span><br><span class="line">- 本地mock数据</span><br><span class="line">- Echarts 图表</span><br><span class="line">- Clipboard(剪贴复制)</span><br><span class="line">- 401/404错误页面</span><br><span class="line">- 错误日志</span><br><span class="line">- 导出excel</span><br><span class="line">- 导出zip</span><br><span class="line">- 前端可视化excel</span><br><span class="line">- 树形table</span><br><span class="line">- Table example</span><br><span class="line">- 动态table example</span><br><span class="line">- 拖拽table example</span><br><span class="line">- 内联编辑table example</span><br><span class="line">- Form example</span><br><span class="line">- 二步登录</span><br><span class="line">- SplitPane</span><br><span class="line">- Dropzone</span><br><span class="line">- Sticky</span><br><span class="line">- CountTo</span><br><span class="line">- Markdown2html</span><br></pre></td></tr></table></figure><p>记录一下关于登录及动态权限二次开发。</p><h3 id="1、vue-element-admin登录及动态权限"><a href="#1、vue-element-admin登录及动态权限" class="headerlink" title="1、vue-element-admin登录及动态权限"></a>1、vue-element-admin登录及动态权限</h3><p>(1) 用账号和密码换取token，并将token存入cookie中，并将token设置在请求头中</p><p>(2) 使用token获取用户role_id</p><p>(3) 通过role_id与前端预先配置好的路由权限进行匹配，得到用户导航（主要使用<strong>router.addRoutes</strong>(routes)和router中的meta属性）</p><p>(4) 每次路由切换（初始化），都会先通过导航守卫（router.beforeEach）进行处理</p><ul><li>判断是否存在token<ol><li>存在，判断role_id是否存在，不存在则重新拉取(从后端请求)用户信息，获得role_id，存在，跳转至指定路由</li><li>不存在，重定向至登录页面</li></ol></li></ul><h3 id="2、修改登录及动态权限"><a href="#2、修改登录及动态权限" class="headerlink" title="2、修改登录及动态权限"></a>2、修改登录及动态权限</h3><p>考虑到用户角色对应的权限会进行更改，用户对应的导航就从后端获取。</p><p>(1)使用账号和密码换取token及相关的用户信息（含有role_id），并将token设置在请求头中同时保存在cookie中,将用户信息存在localstorage(不提倡)</p><p>(2)根据role_id请求用户导航权限（json对象），将json对象处理成router格式，使用<strong>router.addRoutes</strong>挂载原来路由对象上</p><p>(3)每次路由切换（初始化），都会先通过导航守卫进行处理</p><ul><li>判断是否存在token<ol><li>存在，判断localstorage中是否存在用户信息，存在则请求用户导航</li><li>不存在，重定向至登录页面</li></ol></li></ul><h3 id="流程缺陷"><a href="#流程缺陷" class="headerlink" title="流程缺陷"></a>流程缺陷</h3><ol><li>用户信息直接存localstorage，直接暴露role_id，会有越权问题</li><li>用户信息更新不及时。在两台电脑上都登录过，在一台电脑更新了用户信息，使用另一台登录，用户信息不会马上更新。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;刚入职，上级推荐使用vue-element-admin来实现一个后台管理。&lt;/p&gt;
&lt;h3 id=&quot;vue-element-admin简介&quot;&gt;&lt;a href=&quot;#vue-element-admin简介&quot; class=&quot;headerlink&quot; title=&quot;vue-eleme
      
    
    </summary>
    
      <category term="博客" scheme="https://elemy.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="vue-element-admin" scheme="https://elemy.github.io/tags/vue-element-admin/"/>
    
      <category term="后台管理系统" scheme="https://elemy.github.io/tags/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>github+hexo换个主题</title>
    <link href="https://elemy.github.io/2018/03/19/github+hexo%E6%8D%A2%E4%B8%AA%E4%B8%BB%E9%A2%98/"/>
    <id>https://elemy.github.io/2018/03/19/github+hexo换个主题/</id>
    <published>2018-03-18T16:00:00.000Z</published>
    <updated>2018-04-26T01:56:16.627Z</updated>
    
    <content type="html"><![CDATA[<p>看到网上很多胖友推荐next，在Github上Star也是最高的Hexo主题，所以想要体验一下。下面是记录的安装步骤。</p><h3 id="找到本地博客目录"><a href="#找到本地博客目录" class="headerlink" title="找到本地博客目录"></a>找到本地博客目录</h3><p>cmd进入本地博客目录，我用的是git bash直接在该文件下打开。</p><h3 id="下载主题包"><a href="#下载主题包" class="headerlink" title="下载主题包"></a>下载主题包</h3><p>在cmd中输入以下命令，下载next主题包，下载完成后的主题包在theme文件夹下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><h3 id="修改站点配置文件"><a href="#修改站点配置文件" class="headerlink" title="修改站点配置文件"></a>修改站点配置文件</h3><p>修改博客的配置文件（目录：根目录下的_config.yml，称为“站点配置文件”）。打开文件修改theme的值为next，<strong>注意！冒号后面有一个空格</strong>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><h3 id="浏览器中查看主题"><a href="#浏览器中查看主题" class="headerlink" title="浏览器中查看主题"></a>浏览器中查看主题</h3><p>在命令行中输入以下命令，就可以查看看更改后的的主题了，很简约的一个主题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s --debug</span><br></pre></td></tr></table></figure><p>一大串代码之后，直到看见“ <a href="http://localhost:XXXX”为止，这里XXXX表示端口号，默认是4000，将这一串地址输入到浏览器中，即可查看主题。" target="_blank" rel="noopener">http://localhost:XXXX”为止，这里XXXX表示端口号，默认是4000，将这一串地址输入到浏览器中，即可查看主题。</a></p><h3 id="切换风格"><a href="#切换风格" class="headerlink" title="切换风格"></a>切换风格</h3><p>这个主题还有其他几种风格，找到theme/next/_config.yml（称为主题配置文件）,在scheme字段前删除/添加“#”，刷新浏览器，即可查看切换后的主题。</p><h3 id="上传代码"><a href="#上传代码" class="headerlink" title="上传代码"></a>上传代码</h3><p>更新github上的代码，依次：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g #完整命令为hexo generate，用于生成静态文件</span><br><span class="line">$ hexo s #完整命令为hexo server，用于启动服务器，主要用来本地预览</span><br><span class="line">$ hexo d #完整命令为hexo deploy，用于将本地文件发布到github上</span><br></pre></td></tr></table></figure><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>在执行hexo d时，可能会抛出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure><p>解决办法：</p><p>1、deploy的type 的github需要改成git</p><p>2、<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git –save</span><br></pre></td></tr></table></figure></p><p>也可能会抛出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bash: /dev/tty: No such device or address</span><br><span class="line">error: failed to execute prompt script (exit code 1)</span><br><span class="line">fatal: could not read Username for &apos;https://github.com&apos;: No error</span><br><span class="line">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class="line">Error: bash: /dev/tty: No such device or address</span><br><span class="line">error: failed to execute prompt script (exit code 1)</span><br><span class="line">fatal: could not read Username for &apos;https://github.com&apos;: No error</span><br></pre></td></tr></table></figure><p>解决办法：</p><p>把_config.yml文件中repository/repo:<a href="https://github.com/Elemy/elemy.github.io.git" target="_blank" rel="noopener">https://github.com/Elemy/elemy.github.io.git</a> 这个地址改为 <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:Elemy/elemy.github.io.git</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;看到网上很多胖友推荐next，在Github上Star也是最高的Hexo主题，所以想要体验一下。下面是记录的安装步骤。&lt;/p&gt;
&lt;h3 id=&quot;找到本地博客目录&quot;&gt;&lt;a href=&quot;#找到本地博客目录&quot; class=&quot;headerlink&quot; title=&quot;找到本地博客目录&quot;
      
    
    </summary>
    
      <category term="博客" scheme="https://elemy.github.io/categories/%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="Hexo" scheme="https://elemy.github.io/tags/Hexo/"/>
    
      <category term="Next" scheme="https://elemy.github.io/tags/Next/"/>
    
      <category term="博客" scheme="https://elemy.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
